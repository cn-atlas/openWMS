"""
Django settings for OpenWMS project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import re
import datetime
from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-dzv*7bld@-4yw4m1%*txu5rq8!k+taq07zgw#8#z2h@6xaauwu"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "drf_yasg",
    "import_export",
    "tinymce",
    "django_filters",
    "rest_framework",
    "debug_toolbar",
    "WMS",
    "utils",
    "account",
    "api"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware"
]

INSTALLED_APPS = [
                     'auditlog',
                     'rest_framework.authtoken',
                     'django_celery_results',
                     'django_celery_beat'
                 ] + INSTALLED_APPS

MIDDLEWARE = MIDDLEWARE + [
    'OpenWMS.middleware.MethodOverrideMiddleware',
    'OpenWMS.middleware.GetUserAnywhereMiddleware',
    'OpenWMS.middleware.JWTAuthMiddleware',
    'OpenWMS.middleware.XAuditlogMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = "OpenWMS.urls"
X_FRAME_OPTIONS = 'SAMEORIGIN'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "OpenWMS.wsgi.application"

LIST_PER_PAGE = 20
ADMIN_ITEM_NUM_PER_PAGE = 50
AUTH_USER_MODEL = 'account.User'

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': "OpenWMS",
            'USER': 'postgres',
            'PASSWORD': 'zkjy2023',
            'HOST': '127.0.0.1',
            'PORT': '5432',
            # 'OPTIONS': {'charset': 'utf8mb4'},
            'TEST': {
                'NAME': 'test_OpenWMS',
                # 'CHARSET': 'utf8mb4'
            },
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': "OpenWMS",
            'USER': 'postgres',
            'PASSWORD': 'postgres_pass',
            'HOST': '127.0.0.1',
            'PORT': '5432',
            # 'OPTIONS': {'charset': 'utf8mb4'},
            'TEST': {
                'NAME': 'test_OpenWMS',
                # 'CHARSET': 'utf8mb4'
            },
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# ######################## TINYEDITOR configure START ###########################
# TINY 添加文件上传功能
TINYMCE_DEFAULT_CONFIG = {
    "height": "320px",
    "width": "960px",
    "menubar": "file edit view insert format tools table help",
    "plugins": "advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code "
               "fullscreen insertdatetime media table paste code help wordcount spellchecker",
    "toolbar": "undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft "
               "aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor "
               "backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | "
               "fullscreen  preview save print | insertfile image media pageembed template link anchor codesample | "
               "a11ycheck ltr rtl | showcomments addcomment code",
    "custom_undo_redo_levels": 10,
    "language": "zh_CN",  # To force a specific language instead of the Django current language.
    "selector": 'textarea.tinymce',  # change this value according to your HTML
    "images_file_types": "jpeg,jpg,jpe,jfi,jif,jfif,png,gif,bmp,webp",
    "images_upload_url": '/tinymce/upload_image/',  # Image upload address in Django route
}
# ######################## TINYEDITOR configure END ###########################


# ######################## Django-REST configure START ###########################
REST_FRAMEWORK = {
    # 关闭 DRF 默认渲染的页面
    'DEFAULT_RENDERER_CLASSES': ['rest_framework.renderers.JSONRenderer'],
    "DEFAULT_PERMISSION_CLASSES": ['rest_framework.permissions.IsAuthenticated'],
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    "DEFAULT_PAGINATION_CLASS": "OpenWMS.pagination.StandardResultsSetPagination",
    'COERCE_DECIMAL_TO_STRING': False,
    "DEFAULT_FILTER_BACKENDS": (
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
    ),
    "PAGE_SIZE": LIST_PER_PAGE,
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
    ),
    # 访问限速 https://www.django-rest-framework.org/api-guide/throttling/
    # second, minute, hour or day
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.ScopedRateThrottle',
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
    ],
    # 访问速率限制
    'DEFAULT_THROTTLE_RATES': {
        'anon': '60/minute',
        'user': '120/minute',
        'valid': '5/hour'
    }
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=24),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=3),
}

DRF_API_LOGGER_DATABASE = True
DRF_API_LOGGER_PATH_TYPE = 'ABSOLUTE'
# ######################## -Django-REST configure END- ###########################
# ######################## DRF-YASG-DOC configure START ###########################
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        # 'Basic': {
        #     'type': 'basic'
        # },
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}
# ######################## -DRF-YASG-DOC configure END- ###########################

# ######################## -VAPTCHA configure START- ###########################
VAPTCHA_VID = "<VAPTCHA_VID>"
VAPTCHA_KEY = "<VAPTCHA_KEY>"
VAPTCHA_SCENE = 0
VAPTCHA_VERIFY_URL = "https://0.vaptcha.com/verify"
# VAPTCHA_VERIFY_URL = 'https://api.vaptcha.com/v2/verify'
# 多少分可以通过验证
VAPTCHA_REQUIRED_SCORE = 50

VAPTCHA_IN_API_AUTH = False
VAPTCHA_IN_ADMIN = False
# ######################## -VAPTCHA configure END- ###########################

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/


LANGUAGE_CODE = 'zh-hans'
# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_TZ = False

# Define the datetime format
DATETIME_FORMAT = 'Y-m-d H:i:s'

# 加上这里才能访问 media
OSS_MEDIA_LOCATION = '/media/'
MEDIA_PREFIX = 'media/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_PREFIX = 'static/'
# 加上这里才能访问 <SITE>/static
STATIC_URL = '/dj-static/'
# collectstatic 用
STATIC_ROOT = os.path.join(BASE_DIR, 'dj-static')
# ADMIN_MEDIA_PREFIX = '/static/admin'
# STATIC_JS_DIR = os.path.join(STATIC_URL, "js")
# TINYMCE_JS_ROOT = os.path.join(STATIC_JS_DIR, "tiny_mce")
# TINYMCE_JS_URL = os.path.join(TINYMCE_JS_ROOT, "tiny_mce.js")
STATICFILES_DIRS = [
    # os.path.join(BASE_DIR, "dj-static"),
]

# 这些错误会忽略，不发邮件给管理员
IGNORABLE_404_URLS = [
    re.compile(r'^/apple-touch-icon.*\.png$'),
    re.compile(r'^/favicon\.ico$'),
    re.compile(r'^/robots\.txt$'),
]

# ######################## EMAIL configure START ###########################
# 邮件配置
# http://carey.akhack.com/2018/08/24/django%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97%E8%87%AA%E5%8A%A8%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E6%8A%A5%E8%AD%A6/
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.exmail.qq.com'  # SMTP地址
EMAIL_PORT = 465
EMAIL_HOST_USER = '<EMAIL>'  # 发送邮件的邮箱
EMAIL_HOST_PASSWORD = '<EMAIL PASSWORD>'
EMAIL_SUBJECT_PREFIX = '[OpenWMS]'  # 为邮件Subject-line前缀,默认是'[django]'
# EMAIL_USE_TLS = True
EMAIL_USE_SSL = True
EMAIL_TIMEOUT = 3
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# https://docs.djangoproject.com/en/2.1/howto/error-reporting/#email-reports
# https://djangodeconstructed.com/2018/12/18/django-and-python-logging-in-plain-english/
# https://www.loggly.com/ultimate-guide/python-logging-libraries-frameworks/
# The email address that error messages come from, such as those sent to ADMINS and MANAGERS.
# SERVER_EMAIL 是发生到admins和managers的邮件发送者，如果不配置默认为root@localhost
SERVER_EMAIL = '<EMAIL>'
ADMINS = (
    ('Qinfei', '<RECEIVER EMAIL>'),
)  # 接收邮件的邮箱（或邮件组）
# ######################## EMAIL configure END ###########################
# ######################## CELERY RABBIT_MQ configure START ###########################
BROKER_PORT = 5672  # RabbitMQ服务器端口
BROKER_VHOST = "<RABBITMQ VHOST>"

# Celery Configuration Options
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'django-db'
# CELERY_IGNORE_RESULT = True
# 长时间执行 Celery 会导致内存泄漏 每个worker执行了多少任务就会死掉
CELERYD_MAX_TASKS_PER_CHILD = 40
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
# 只有设置了这一条，才会走数据库
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

# TODO: 尚未修复时区问题，暂时使用一次性的周期任务来代替
# 官方用来修复CELERY_ENABLE_UTC=False and USE_TZ = False 时时间比较错误的问题；
# 详情见：https://github.com/celery/django-celery-beat/pull/216/files
# ENABLE_UTC = False
CELERY_ENABLE_UTC = False
DJANGO_CELERY_BEAT_TZ_AWARE = False
# 默认时区是UTC 新方法，小写 celery >= 4.0
# timezone = 'Asia/Shanghai'

if DEBUG:
    BROKER_USER = "guest"  # RabbitMQ配置中创建的用户
    BROKER_PASSWORD = "guest"  # RabbitMQ配置中创建的用户密码
    BROKER_HOST = "localhost"  # RabbitMQ服务器地址
    CELERY_BROKER_URL = "amqp://guest@{broker}:{port}/{vhost}".format(username=BROKER_USER,
                                                                      password=BROKER_PASSWORD,
                                                                      broker=BROKER_HOST,
                                                                      port=BROKER_PORT,
                                                                      vhost=BROKER_VHOST)
else:
    BROKER_USER = "<RABBITMQ USER>"  # RabbitMQ配置中创建的用户
    BROKER_PASSWORD = "<PASS>"  # RabbitMQ配置中创建的用户密码
    BROKER_HOST = "<SERVER WITH OUT PORT>"  # RabbitMQ服务器地址
    CELERY_BROKER_URL = "amqp://{username}:{password}@{broker}:{port}/{vhost}".format(username=BROKER_USER,
                                                                                      password=BROKER_PASSWORD,
                                                                                      broker=BROKER_HOST,
                                                                                      port=BROKER_PORT,
                                                                                      vhost=BROKER_VHOST)
# ######################## -CELERY RABBIT_MQ configure END- ###########################
# ######################## LOGGING configure START ###########################
LOGGING = {
    'version': 1,  # 指明dictConnfig的版本
    'disable_existing_loggers': True,  # 禁用所有的已经存在的日志配置
    'formatters': {  # 格式器
        'verbose': {  # 详细
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {  # 简单
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {  # 过滤器
        # 'special': {  # 使用project.logging.SpecialFilter，别名special，可以接受其他的参数
        #     '()': 'project.logging.SpecialFilter',
        #     'foo': 'bar',
        # },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, "monitor.log"),
            'formatter': 'verbose',
            'maxBytes': 1024 * 1024 * 5,
            'backupCount': 5
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'filters': ['require_debug_false'],
            'include_html': True
        }
    },
    # 里面的对应关系在 l = logging.getLogger('django.request') 设置流向, 一般设置为 __name__  为app name
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'propagate': True,
            'level': 'INFO',
        },
        # 'django.db.backends': {
        #     'handlers': ['console'],
        #     'propagate': False,
        #     'level': 'DEBUG'
        # },
        'django.request': {
            'handlers': ['console', 'file', 'mail_admins'],
            'level': 'INFO',
            'propagate': False,
        },
        'OpenWMS': {
            'handlers': ['console', 'file', 'mail_admins'],
            'level': 'INFO',
            'propagate': True,
            # 'filters': ['require_debug_false']
        },
        # 直接运行独立的脚本
        '__main__': {
            'handlers': ['console', 'file', 'mail_admins'],
            'level': 'DEBUG',
            'propagate': True,
            # 'filters': ['require_debug_false']
        }
    }
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
