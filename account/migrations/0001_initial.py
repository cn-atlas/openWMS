# Generated by Django 4.2.4 on 2023-08-29 10:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        blank=True,
                        help_text="沿用样本系统编码",
                        max_length=50,
                        null=True,
                        verbose_name="用户代码",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=50, verbose_name="标题"),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "nickname",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="昵称"
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="手机"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, max_length=10000, null=True, verbose_name="个人简介"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="性别"
                    ),
                ),
                (
                    "is_director",
                    models.BooleanField(default=False, verbose_name="是否部门主管"),
                ),
                (
                    "position",
                    models.CharField(
                        default="", max_length=128, null=True, verbose_name="职位信息"
                    ),
                ),
                (
                    "job_number",
                    models.CharField(
                        db_index=True,
                        default="",
                        max_length=128,
                        null=True,
                        verbose_name="员工工号",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "modify_time",
                    models.DateTimeField(auto_now=True, null=True, verbose_name="修改时间"),
                ),
            ],
            options={
                "verbose_name": "用户信息",
                "verbose_name_plural": "用户信息",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_show",
                    models.BooleanField(
                        default=False, help_text="可用于控制删除", verbose_name="是否显示"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "edit_time",
                    models.DateTimeField(auto_now=True, null=True, verbose_name="修改时间"),
                ),
                (
                    "number",
                    models.CharField(
                        default="", max_length=50, unique=True, verbose_name="单位编号"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="请填写全称",
                        max_length=50,
                        null=True,
                        verbose_name="单位名称",
                    ),
                ),
                (
                    "person",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="联系人"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="单位地址"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="单位电话"
                    ),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True, max_length=9999, null=True, verbose_name="备注"
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建人",
                    ),
                ),
                (
                    "editor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="edited_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="修改人",
                    ),
                ),
            ],
            options={
                "verbose_name": "单位",
                "verbose_name_plural": "单位",
            },
        ),
        migrations.CreateModel(
            name="LoginLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "credential",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="用户凭证"
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="登录方式 WEB OAuth",
                    ),
                ),
                (
                    "login_username",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="登陆用户名"
                    ),
                ),
                (
                    "ip",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="登录ip"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="登陆城市"
                    ),
                ),
                (
                    "agent",
                    models.TextField(blank=True, null=True, verbose_name="浏览器信息"),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="备注，登录失败的原因"
                    ),
                ),
                (
                    "status",
                    models.BooleanField(
                        default=False, help_text="成功为True", verbose_name="是否成功"
                    ),
                ),
                (
                    "login_time",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="登陆时间"
                    ),
                ),
            ],
            options={
                "verbose_name": "登录日志",
                "verbose_name_plural": "登录日志",
            },
        ),
        migrations.CreateModel(
            name="UserType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=16, verbose_name="名称")),
                (
                    "remark",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="备注"
                    ),
                ),
            ],
            options={
                "verbose_name": "用户类别",
                "verbose_name_plural": "用户类别",
            },
        ),
        migrations.CreateModel(
            name="ValidCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "credential",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="用户凭证"
                    ),
                ),
                (
                    "valid_type",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="验证类型"
                    ),
                ),
                (
                    "valid_code",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="验证码"
                    ),
                ),
                (
                    "uuid",
                    models.CharField(
                        blank=True,
                        help_text="无特殊意义，用来标记唯一的验证码；和用于邮件验证链接",
                        max_length=128,
                        null=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "modify_time",
                    models.DateTimeField(auto_now=True, null=True, verbose_name="修改时间"),
                ),
            ],
            options={
                "verbose_name": "验证码",
                "verbose_name_plural": "验证码",
            },
        ),
        migrations.CreateModel(
            name="UIRouter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_show",
                    models.BooleanField(
                        default=False, help_text="可用于控制删除", verbose_name="是否显示"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "edit_time",
                    models.DateTimeField(auto_now=True, null=True, verbose_name="修改时间"),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="路由名称"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="路由代码"
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="路由path"
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="路由图标代码"
                    ),
                ),
                (
                    "component",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="组件"
                    ),
                ),
                (
                    "redirect",
                    models.CharField(
                        blank=True, max_length=512, null=True, verbose_name="重定向地址"
                    ),
                ),
                (
                    "target",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="跳转方式"
                    ),
                ),
                (
                    "hide_in_menu",
                    models.BooleanField(default=False, verbose_name="在菜单中隐藏"),
                ),
                (
                    "hide_children_in_menu",
                    models.BooleanField(default=False, verbose_name="隐藏子菜单"),
                ),
                (
                    "hide_breadcrumb",
                    models.BooleanField(default=False, verbose_name="在面包屑导航中隐藏"),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="大数排在前面，支持负数,请跳跃编号，方便中间插入",
                        verbose_name="排序优先级",
                    ),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="备注信息"
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建人",
                    ),
                ),
                (
                    "editor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="edited_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="修改人",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="son_%(class)s",
                        to="account.uirouter",
                        verbose_name="上级",
                    ),
                ),
                (
                    "x_authority",
                    models.ManyToManyField(
                        blank=True,
                        help_text="只选择view 即可，前端控制也只用view。写的越少可见的人越多，为空是所有人都可见",
                        to="auth.permission",
                        verbose_name="路由准入权限",
                    ),
                ),
            ],
            options={
                "verbose_name": "界面路由",
                "verbose_name_plural": "界面路由",
                "ordering": ["-priority"],
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_show",
                    models.BooleanField(
                        default=False, help_text="可用于控制删除", verbose_name="是否显示"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="创建时间"
                    ),
                ),
                (
                    "edit_time",
                    models.DateTimeField(auto_now=True, null=True, verbose_name="修改时间"),
                ),
                (
                    "department_number",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="部门ID"
                    ),
                ),
                (
                    "department_name",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="部门名称"
                    ),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="备注信息"
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="account.company",
                        verbose_name="所属单位",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建人",
                    ),
                ),
                (
                    "editor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="edited_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="修改人",
                    ),
                ),
                (
                    "group",
                    models.ManyToManyField(
                        blank=True,
                        help_text="为了分组控制查询范围权限，跟user里面的group(user优先)同样生效",
                        related_name="depart_groups",
                        to="auth.group",
                        verbose_name="分组",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="son_%(class)s",
                        to="account.department",
                        verbose_name="上级",
                    ),
                ),
            ],
            options={
                "verbose_name": "部门",
                "verbose_name_plural": "部门",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="cls",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="class_users",
                to="account.usertype",
                verbose_name="用户类别",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="company",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="company_users",
                to="account.company",
                verbose_name="所属公司",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="department",
            field=models.ForeignKey(
                blank=True,
                help_text="内部员工专用",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="department_users",
                to="account.department",
                verbose_name="部门/分公司",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
    ]
